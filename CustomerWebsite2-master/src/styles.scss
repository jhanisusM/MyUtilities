// CSS Reset, comment out if not required or using a different module

// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$CustomerWebsite2-primary: mat-palette($mat-blue);
$CustomerWebsite2-accent: mat-palette($mat-light-blue, A200, A100, A400);

// The warn palette is optional (defaults to red).
$CustomerWebsite2-warn: mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
$CustomerWebsite2-theme: mat-light-theme($CustomerWebsite2-primary, $CustomerWebsite2-accent, $CustomerWebsite2-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($CustomerWebsite2-theme);

// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$CustomerWebsite2-primary: mat-palette($mat-blue);
$CustomerWebsite2-accent: mat-palette($mat-light-blue, A200, A100, A400);

// The warn palette is optional (defaults to red).
$CustomerWebsite2-warn: mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
$CustomerWebsite2-theme: mat-light-theme($CustomerWebsite2-primary, $CustomerWebsite2-accent, $CustomerWebsite2-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($CustomerWebsite2-theme);


// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$CustomerWebsite2-primary: mat-palette($mat-blue);
$CustomerWebsite2-accent: mat-palette($mat-light-blue, A200, A100, A400);

// The warn palette is optional (defaults to red).
$CustomerWebsite2-warn: mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
$CustomerWebsite2-theme: mat-light-theme($CustomerWebsite2-primary, $CustomerWebsite2-accent, $CustomerWebsite2-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($CustomerWebsite2-theme);

/* You can add global styles to this file, and also import other style files */

body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }

@media (max-width: 868px) {
  .content-wrapper {
    padding-top: 0;
  }
}

@keyframes fadeInUp {
  from {
      transform: translate(0, 50px);
  }

  to {
      transform: translate(0,0);
      opacity: 1
  }
}

@-webkit-keyframes fadeInUp {
  from {
      transform: translate(0,50px)
  }

  to {
      transform: translate(0,0);
      opacity: 1
  }
}

@-webkit-keyframes fadeIn {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}


.fadeIn {
  animation-duration: 1s;
  animation-fill-mode: both;
  -webkit-animation-duration: 1s;
  -webkit-animation-fill-mode: both
}

.fadeIn {
  opacity: 0;
  animation-name: fadeIn;
  -webkit-animation-name: fadeIn;
}
